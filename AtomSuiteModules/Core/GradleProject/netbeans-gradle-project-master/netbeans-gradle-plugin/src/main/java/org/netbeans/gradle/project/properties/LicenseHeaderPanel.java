package org.netbeans.gradle.project.properties;

import java.io.File;
import java.util.Collections;
import org.jtrim.utils.ExceptionHelper;
import org.netbeans.gradle.project.NbGradleProject;
import org.openide.filesystems.FileChooserBuilder;
import org.openide.filesystems.FileObject;
import org.openide.filesystems.FileUtil;

/**
 *
 * @author Kelemen Attila
 */
@SuppressWarnings("serial")
public class LicenseHeaderPanel extends javax.swing.JPanel {
    private static final String ORGANIZATION_PROPERTY_NAME = "organization";

    private final NbGradleProject project;
    private final ProjectProperties properties;

    /**
     * Creates new form LicenseHeaderPanel
     */
    public LicenseHeaderPanel(NbGradleProject project) {
        ExceptionHelper.checkNotNullArgument(project, "project");

        this.project = project;

        initComponents();

        this.properties = loadFromProperties();
    }

    private void displayValues(LicenseHeaderInfo info) {
        if (info == null) {
            jLicenseNameEdit.setText("");
            jLicenseTemplateEdit.setText("");
            jOrganizationEdit.setText("");
        }
        else {
            String organization = info.getProperties().get(ORGANIZATION_PROPERTY_NAME);
            jOrganizationEdit.setText(organization != null ? organization : "");

            jLicenseNameEdit.setText(info.getLicenseName());

            File licenseTemplate = info.getLicenseTemplateFile();
            jLicenseTemplateEdit.setText(licenseTemplate != null ? licenseTemplate.getPath() : "");
        }
    }

    private ProjectProperties loadFromProperties() {
        return project.getPropertiesForProfile(null, false, new PropertiesLoadListener() {
            @Override
            public void loadedProperties(ProjectProperties properties) {
                displayValues(properties.getLicenseHeader().getValue());
            }
        });
    }

    public void save() {
        properties.getLicenseHeader().setValue(getLicenseHeaderInfo());
    }

    private LicenseHeaderInfo getLicenseHeaderInfo() {
        String name = jLicenseNameEdit.getText().trim();
        if (name.isEmpty()) {
            return null;
        }

        String template = jLicenseTemplateEdit.getText().trim();
        File templateFile = template.isEmpty() ? null : new File(template);

        String organization = jOrganizationEdit.getText().trim();

        return new LicenseHeaderInfo(
                name,
                Collections.singletonMap(ORGANIZATION_PROPERTY_NAME, organization),
                templateFile);
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jOrganizationCaption = new javax.swing.JLabel();
        jOrganizationEdit = new javax.swing.JTextField();
        jLicenseNameCaption = new javax.swing.JLabel();
        jLicenseNameEdit = new javax.swing.JTextField();
        jLicenseTemplateCaption = new javax.swing.JLabel();
        jLicenseTemplateEdit = new javax.swing.JTextField();
        jBrowseButton = new javax.swing.JButton();
        jCaption = new javax.swing.JLabel();

        org.openide.awt.Mnemonics.setLocalizedText(jOrganizationCaption, org.openide.util.NbBundle.getMessage(LicenseHeaderPanel.class, "LicenseHeaderPanel.jOrganizationCaption.text")); // NOI18N

        jOrganizationEdit.setText(org.openide.util.NbBundle.getMessage(LicenseHeaderPanel.class, "LicenseHeaderPanel.jOrganizationEdit.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLicenseNameCaption, org.openide.util.NbBundle.getMessage(LicenseHeaderPanel.class, "LicenseHeaderPanel.jLicenseNameCaption.text")); // NOI18N

        jLicenseNameEdit.setText(org.openide.util.NbBundle.getMessage(LicenseHeaderPanel.class, "LicenseHeaderPanel.jLicenseNameEdit.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLicenseTemplateCaption, org.openide.util.NbBundle.getMessage(LicenseHeaderPanel.class, "LicenseHeaderPanel.jLicenseTemplateCaption.text")); // NOI18N

        jLicenseTemplateEdit.setText(org.openide.util.NbBundle.getMessage(LicenseHeaderPanel.class, "LicenseHeaderPanel.jLicenseTemplateEdit.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jBrowseButton, org.openide.util.NbBundle.getMessage(LicenseHeaderPanel.class, "LicenseHeaderPanel.jBrowseButton.text")); // NOI18N
        jBrowseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBrowseButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jCaption, org.openide.util.NbBundle.getMessage(LicenseHeaderPanel.class, "LicenseHeaderPanel.jCaption.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCaption, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jOrganizationEdit)
                    .addComponent(jLicenseNameEdit)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jOrganizationCaption)
                            .addComponent(jLicenseNameCaption)
                            .addComponent(jLicenseTemplateCaption))
                        .addGap(0, 360, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLicenseTemplateEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBrowseButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCaption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jOrganizationCaption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jOrganizationEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLicenseNameCaption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLicenseNameEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLicenseTemplateCaption)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLicenseTemplateEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBrowseButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private static String tryMakeRelative(File parent, File file) {
        File normParent = FileUtil.normalizeFile(parent);
        File normFile = FileUtil.normalizeFile(file);

        if (normParent == null || normFile == null) {
            return null;
        }

        FileObject parentObj = FileUtil.toFileObject(normParent);
        FileObject fileObj = FileUtil.toFileObject(normFile);

        if (fileObj == null || parentObj == null) {
            return null;
        }

        String relPath = FileUtil.getRelativePath(parentObj, fileObj);
        return relPath != null ? relPath.replace("/", File.separator) : null;
    }

    private void jBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBrowseButtonActionPerformed
        File initialDir = project.getAvailableModel().getRootProjectDir();

        FileChooserBuilder dlgChooser = new FileChooserBuilder(
                LicenseHeaderPanel.class.getName() + "-" + initialDir.getName());
        dlgChooser.setDefaultWorkingDirectory(initialDir);

        File f = dlgChooser.showOpenDialog();
        if (f == null || f.isDirectory()) {
            return;
        }

        File file = f.getAbsoluteFile();
        String relPath = tryMakeRelative(project.getAvailableModel().getRootProjectDir(), file);
        jLicenseTemplateEdit.setText(relPath != null ? relPath : file.getPath());

    }//GEN-LAST:event_jBrowseButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBrowseButton;
    private javax.swing.JLabel jCaption;
    private javax.swing.JLabel jLicenseNameCaption;
    private javax.swing.JTextField jLicenseNameEdit;
    private javax.swing.JLabel jLicenseTemplateCaption;
    private javax.swing.JTextField jLicenseTemplateEdit;
    private javax.swing.JLabel jOrganizationCaption;
    private javax.swing.JTextField jOrganizationEdit;
    // End of variables declaration//GEN-END:variables
}
