/*
 
 */
package com.jme3.gde.gui.extra.xam.model.visitor;

import com.jme3.gde.gui.extra.xam.model.AttributesType;
import com.jme3.gde.gui.extra.xam.model.ControlDefinition;
import com.jme3.gde.gui.extra.xam.model.ControlType;
import com.jme3.gde.gui.extra.xam.model.EffectValueType;
import com.jme3.gde.gui.extra.xam.model.EffectsType;
import com.jme3.gde.gui.extra.xam.model.ElementType;
import com.jme3.gde.gui.extra.xam.model.ImageType;
import com.jme3.gde.gui.extra.xam.model.InteractType;
import com.jme3.gde.gui.extra.xam.model.LayerType;
import com.jme3.gde.gui.extra.xam.model.NiftyComponent;
import com.jme3.gde.gui.extra.xam.model.NiftyExtensibilityElement;
import com.jme3.gde.gui.extra.xam.model.NiftyType;
import com.jme3.gde.gui.extra.xam.model.OnHoverType;
import com.jme3.gde.gui.extra.xam.model.PanelType;
import com.jme3.gde.gui.extra.xam.model.PopupType;
import com.jme3.gde.gui.extra.xam.model.RegisterEffectType;
import com.jme3.gde.gui.extra.xam.model.RegisterMouseCursorType;
import com.jme3.gde.gui.extra.xam.model.RegisterMusicType;
import com.jme3.gde.gui.extra.xam.model.RegisterSoundType;
import com.jme3.gde.gui.extra.xam.model.ResourceBundleType;
import com.jme3.gde.gui.extra.xam.model.ScreenType;
import com.jme3.gde.gui.extra.xam.model.SingleEffectType;
import com.jme3.gde.gui.extra.xam.model.SingleEffectTypeBase;
import com.jme3.gde.gui.extra.xam.model.SingleEffectTypeHover;
import com.jme3.gde.gui.extra.xam.model.SingleEffectTypeOnHover;
import com.jme3.gde.gui.extra.xam.model.StyleType;
import com.jme3.gde.gui.extra.xam.model.TextType;
import com.jme3.gde.gui.extra.xam.model.UseControlsType;
import com.jme3.gde.gui.extra.xam.model.UseStylesType;

/**
 * Default visitor for shallow traversing of the model components in the 
 * Nifty domain.
 *
 * @author cuongnguyen
 */
// Generated by XAM AutoGen Tool v0.2
public class DefaultVisitor implements NiftyComponentVisitor {
        
    public void visit(ElementType target) {
        visitComponent(target);
    }

    public void visit(LayerType target) {
        visitComponent(target);
    }

    public void visit(PanelType target) {
        visitComponent(target);
    }

    public void visit(ImageType target) {
        visitComponent(target);
    }

    public void visit(TextType target) {
        visitComponent(target);
    }

    public void visit(ControlDefinition target) {
        visitComponent(target);
    }

    public void visit(ControlType target) {
        visitComponent(target);
    }

    public void visit(UseStylesType target) {
        visitComponent(target);
    }

    public void visit(UseControlsType target) {
        visitComponent(target);
    }

    public void visit(RegisterSoundType target) {
        visitComponent(target);
    }

    public void visit(RegisterEffectType target) {
        visitComponent(target);
    }

    public void visit(RegisterMusicType target) {
        visitComponent(target);
    }

    public void visit(RegisterMouseCursorType target) {
        visitComponent(target);
    }

    public void visit(ResourceBundleType target) {
        visitComponent(target);
    }

    public void visit(AttributesType target) {
        visitComponent(target);
    }

    public void visit(InteractType target) {
        visitComponent(target);
    }

    public void visit(EffectValueType target) {
        visitComponent(target);
    }

    public void visit(SingleEffectTypeBase target) {
        visitComponent(target);
    }

    public void visit(SingleEffectType target) {
        visitComponent(target);
    }

    public void visit(SingleEffectTypeOnHover target) {
        visitComponent(target);
    }

    public void visit(OnHoverType target) {
        visitComponent(target);
    }

    public void visit(SingleEffectTypeHover target) {
        visitComponent(target);
    }

    public void visit(EffectsType target) {
        visitComponent(target);
    }

    public void visit(StyleType target) {
        visitComponent(target);
    }

    public void visit(PopupType target) {
        visitComponent(target);
    }

    public void visit(ScreenType target) {
        visitComponent(target);
    }

    public void visit(NiftyType target) {
        visitComponent(target);
    }

    public void visit(NiftyExtensibilityElement target) {
        visitComponent(target);
    }

    protected void visitComponent(NiftyComponent target) {
    }

}