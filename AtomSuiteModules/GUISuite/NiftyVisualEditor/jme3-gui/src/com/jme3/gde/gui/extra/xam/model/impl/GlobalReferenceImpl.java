/*
 
 */
package com.jme3.gde.gui.extra.xam.model.impl;

import com.jme3.gde.gui.extra.xam.model.NiftyModel;
import com.jme3.gde.gui.extra.xam.model.ReferenceableNiftyComponent;
import com.jme3.gde.gui.extra.xam.model.spi.NiftyComponentBase;
import com.jme3.gde.gui.extra.xam.model.visitor.FindReferencedVisitor;
import org.netbeans.modules.xml.xam.dom.AbstractNamedComponentReference;


/**
 *
 * @author cuongnguyen
 */
// Generated by XAM AutoGen Tool v0.2
public class GlobalReferenceImpl<T extends ReferenceableNiftyComponent> 
        extends AbstractNamedComponentReference<T>  {
    
    /** Creates a new instance of GlobalReferenceImpl */
    //for use by factory, create from scratch
    public GlobalReferenceImpl(
            T referenced, 
            Class<T> type, 
            NiftyComponentBase parent) {
        super(referenced, type, parent);
    }
    
    //for use by resolve methods
    public GlobalReferenceImpl(
            Class<T> type, 
            NiftyComponentBase parent, 
            String refString){
        super(type, parent, refString);
    }
    
    public T get() {
        NiftyComponentBase wparent = NiftyComponentBase.class.cast(getParent());
        if (super.getReferenced() == null) {
            String localName = getLocalName();
            T target = null;
            NiftyModel model = wparent.getModel();
            target = new FindReferencedVisitor<T>(model.getRootComponent()).
                    find(localName, getType());
                
            setReferenced(target);
        }
        return getReferenced();
    }
    
    public String getEffectiveNamespace() {        
       return ""; //Constants.EMPTY_STRING; 
    }
}
