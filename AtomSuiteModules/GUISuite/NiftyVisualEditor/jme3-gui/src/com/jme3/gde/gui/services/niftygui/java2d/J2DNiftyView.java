/* Copyright 2012 Aguzzi Cristiano

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 */
package com.jme3.gde.gui.services.niftygui.java2d;

import com.jme3.gde.gui.multiview.SwingEmbedView;
import com.jme3.gde.gui.nbeditor.controller.GUIEditor;
import com.jme3.gde.gui.services.niftygui.SoundDeviceNull;
import de.lessvoid.nifty.Nifty;
import de.lessvoid.nifty.java2d.input.InputSystemAwtImpl;
import de.lessvoid.nifty.java2d.renderer.FontProviderJava2dImpl;
import de.lessvoid.nifty.java2d.renderer.GraphicsWrapper;
import de.lessvoid.nifty.java2d.renderer.RenderDeviceJava2dImpl;
import de.lessvoid.nifty.tools.TimeProvider;
import java.awt.BorderLayout;
import java.awt.Canvas;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Rectangle;

/**
 * J2DNiftyView . Display Nifty in Java2D style. Simple input interactions are
 * implemented
 *
 * @author cris and atomix
 */
public class J2DNiftyView extends SwingEmbedView implements GraphicsWrapper {

    protected Nifty nifty;

    /**
     * Creates new form J2DNiftyView
     */
    public J2DNiftyView(int width, int height) {
        initComponents();
        this.setSize(new Dimension(width, height));

        // For element selection
        guiSelectionHandler = null;

        dragging = false;
        selecting = false;
        curDir = -1;

        this.selectedRect = new Rectangle();
        /*
         try {
         mouseBot = new Robot();
         } catch (AWTException ex) {
         Logger.getLogger(J2DNiftyView.class.getName()).log(Level.SEVERE, null, ex);
         }
         */
    }

    public void createBuffer() {
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUp = new javax.swing.JPopupMenu();
        DeleteButton = new javax.swing.JMenuItem();
        HideButton = new javax.swing.JMenuItem();
        NormalizeButton = new javax.swing.JMenuItem();

        DeleteButton.setText("Delete");
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });
        popUp.add(DeleteButton);

        HideButton.setText("Hide");
        HideButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HideButtonActionPerformed(evt);
            }
        });
        popUp.add(HideButton);

        NormalizeButton.setText("NormalizeSize");
        NormalizeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NormalizeButtonActionPerformed(evt);
            }
        });
        popUp.add(NormalizeButton);

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents

    private void HideButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HideButtonActionPerformed
        this.manager.getElementEditor().setVisibile(false);
        this.selecting = false; //clear the screen from selection
    }//GEN-LAST:event_HideButtonActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        this.manager.removeSelected();
        this.selecting = false;
    }//GEN-LAST:event_DeleteButtonActionPerformed

    private void NormalizeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NormalizeButtonActionPerformed
        this.manager.getElementEditor().normalizeSize();
    }//GEN-LAST:event_NormalizeButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem DeleteButton;
    private javax.swing.JMenuItem HideButton;
    private javax.swing.JMenuItem NormalizeButton;
    private javax.swing.JPopupMenu popUp;
    // End of variables declaration//GEN-END:variables

    public void init() {
        // createCanvas
        canvas = new Canvas() {
            public void addNotify() {
                super.addNotify();
                createBufferStrategy(2);
            }
        };
        canvas.setSize(this.getSize());

        this.add(canvas, BorderLayout.EAST);
        // this.setMaximumSize(new Dimension(this.getWidth(),this.getHeight()));
        this.setIgnoreRepaint(true);
        canvas.setIgnoreRepaint(true);
        //this.jScrollBar1.setVisibleAmount(60);


    }

    private void registerFonts(FontProviderJava2dImpl fontProvider) {
        fontProvider.addFont("aurulent-sans-16.fnt", new Font("aurulent-sans-16",
                Font.ROMAN_BASELINE, 16));

    }

    private void registerStyles() {
    }

    private void registerControlDefs() {
    }

    public Nifty createNiftyInstance() {
        //FIXME: Fix the way we create Nifty from services!
        InputSystemAwtImpl inputSystem = new InputSystemAwtImpl();
        FontProviderJava2dImpl fontProvider = new FontProviderJava2dImpl();
        registerFonts(fontProvider);

        RenderDeviceJava2dImpl renderDevice = new RenderDeviceJava2dImpl(this);
        renderDevice.setFontProvider(fontProvider);

        nifty = new Nifty(renderDevice, new SoundDeviceNull(), inputSystem, new TimeProvider());

        return nifty;
    }

    public Nifty getNifty() {
        return nifty;
    }

    public void clearNifty() {
        Nifty temp = this.getNifty();
        for (String sel : temp.getAllScreensName()) {
            temp.removeScreen(sel);
        }
    }

    @Override
    protected boolean render() {
        return super.render();
    }

    @Override
    protected boolean nativeRender() {
        super.nativeRender();

        boolean done = nifty.update();
        nifty.render(true);
        //nifty.getRenderEngine().renderQuad(0, 0, 0, 0);
        if (nifty.isDebugOptionPanelColors()) {
            // FPS:
            //graphics2D.setColor(java.awt.Color.red);
            //graphics2D.setFont(fpsFont);
            //graphics2D.drawString(fps, 0, fpsFont.getSize());
        }

        return done;
    }

    @Override
    protected void drawSelectingRect() {
        super.drawSelectingRect();
        nifty.getRenderEngine().renderQuad((int) selectedRect.getMaxX() - 5, (int) selectedRect.getMaxY() - 5, 10, 10);
    }

    @Override
    public void setManager(GUIEditor manager) {
        super.setManager(manager);
        this.manager.bindSelectionView(this, popUp);
    }
}
